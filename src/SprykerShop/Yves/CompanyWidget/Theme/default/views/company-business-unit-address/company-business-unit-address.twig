{% extends template('widget') %}

{% define data = {
    formType: _widget.formType,
    currentAddressId: _widget.formAddressTransfer.idCustomerAddress | default,
    formAddressTransfer: _widget.formAddressTransfer,
    addresses: _widget.addresses,
    customerAddresses: _widget.customerAddresses,
    companyBusinessUnitAddresses: _widget.companyBusinessUnitAddresses,
    isCustomAddress: app.request.get('customAddress')[_widget.formType]  | default(not _widget.formAddressTransfer.idCustomerAddress),
    isMultipleShipmentEnabled: false,
} %}

{% block body %}
    {% set defaultAddressKey = null %}
    {% set optionValueDeliverToMultipleAddresses = '-1' %}

    {% if not data.isCustomAddress and (data.currentAddressId or not data.formAddressTransfer.firstName) %}
        {% for address in data.customerAddresses %}
            {% if not data.currentAddressId and data.formType == 'shippingAddress' and address.isDefaultShipping %}
                {% set defaultAddressKey = address.key %}
            {% endif %}
            {% if not data.currentAddressId and data.formType == 'billingAddress' and address.isDefaultBilling %}
                {% set defaultAddressKey = address.key %}
            {% endif %}
            {% if data.currentAddressId == address.idCustomerAddress %}
                {% set defaultAddressKey = address.key %}
            {% endif %}
            {% if data.currentAddressId == optionValueDeliverToMultipleAddresses %}
                {% set defaultAddressKey = optionValueDeliverToMultipleAddresses %}
            {% endif %}
        {% endfor %}
    {% endif %}

    {% embed atom('select') with {
        class: 'spacing-bottom',
        attributes: {
            name: 'checkout-full-addresses',
        },
        data: {
            isGrouped: true,
        },
        embed: {
            customerAddresses: data.customerAddresses,
            companyBusinessUnitAddresses: data.companyBusinessUnitAddresses,
            formType: data.formType,
            defaultAddressKey: defaultAddressKey,
            currentAddressId: data.currentAddressId,
            isMultipleShipmentEnabled: data.isMultipleShipmentEnabled,
            optionValueDeliverToMultipleAddresses: optionValueDeliverToMultipleAddresses,
        },
    } only %}
        {% block selectClass %}js-form-select-address__{{ embed.formType }}{% endblock %}
        {% block option %}
            {% set isSelected = embed.defaultAddressKey == address.key %}
            {% set fullName = '%s %s %s, %s %s, %s %s' | format(
                address.salutation,
                address.firstName,
                address.lastName,
                address.address1,
                address.address2,
                address.zipCode,
                address.city)
            %}
            {% define option = {
                selected: isSelected,
                value: address.key,
                label: fullName
            } %}
            {{ parent() }}
        {% endblock %}
        {% block optionsGroup %}
            <option value="">{{ 'company.account.add_new_address' | trans }}</option>

            {% if embed.customerAddresses is not empty %}
                <optgroup label="{{ 'page.checkout.address.option_group.customer' | trans }}">
                    {% for address in embed.customerAddresses %}
                        {{ block('option') }}
                    {% endfor %}
                </optgroup>
            {% endif %}

            {% if embed.companyBusinessUnitAddresses is not empty %}
                <optgroup label="{{ 'page.checkout.address.option_group.company_business_unit' | trans }}">
                    {% for address in embed.companyBusinessUnitAddresses %}
                        {{ block('option') }}
                    {% endfor %}
                </optgroup>
            {% endif %}

            {% if embed.formType == 'shippingAddress' and embed.isMultipleShipmentEnabled %}
                <option value="{{ embed.optionValueDeliverToMultipleAddresses }}" {% if embed.defaultAddressKey == embed.optionValueDeliverToMultipleAddresses %}selected{% endif %}>
                    {{ 'customer.account.deliver_to_multiple_addresses' | trans }}
                </option>
            {% endif %}
        {% endblock %}
    {% endembed %}

    {% include molecule('company-business-unit-address-handler', 'CompanyWidget') with {
        attributes: {
            'form-selector': '.js-form-handler__' ~ data.formType,
            'data-selector': '.js-form-select-address__' ~ data.formType,
            'shipping-address-toggler-selector': '.js-form-select-address__shippingAddress',
            'default-address-selector': '.js-form-default-address__' ~ data.formType,
            'address-hidden-input-selector': 'addressesForm[' ~ data.formType ~ '][id_customer_address]',
            'shipping-address-hidden-input-selector': 'addressesForm[shippingAddress][id_customer_address]',
            'hidden-input-id-customer-address-saver-selector': '.js-hidden-input-id-customer__' ~ data.formType ~ '-saver',
            'hidden-input-id-customer-shipping-address-saver-selector': '.js-hidden-input-id-customer__shippingAddress-saver',
            'addresses': data.addresses,
            'toggle-option-value': optionValueDeliverToMultipleAddresses,
        },
    } only %}

    <input type="hidden" name="addressesForm[{{ data.formType }}][id_customer_address]">
    <input type="hidden" name="addressesForm[{{ data.formType }}][id_company_unit_address]" value="33">
    <input type="hidden" class="js-hidden-input-id-customer__{{ data.formType }}-saver">
    <input type="hidden" class="js-form-default-address__{{ data.formType }}" value="{{ defaultAddressKey }}">
{% endblock %}
